# –î–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è
import os
# –î–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –∞–Ω–∏–º–∞—Ü–∏—è—Ö
from time import sleep

# –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
import json

import requests

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
import markups

# PyroGram –∏ –ë–õ–ê-–ë–õ–ê-–ë–õ–ê
import pyrogram.enums
from pyrogram import filters
from pyrogram.errors import FloodWait

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
from random import randint
# –•—É–π –∑–Ω–∞–µ—Ç –∑–∞—á–µ–º, –º–Ω–µ —Ç–∞–∫ –ì–ü–¢ –æ—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–ª
from collections import defaultdict
# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ
from copy import deepcopy

# –ú–æ–∏ –º–æ–¥—É–ª–∏
from config import user, bot, message_store
from chatbot import chatbot
from monster import generate_image
from image_upload import upload_photo

# –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–ª–æ–≤
from fuzzywuzzy import process
from fuzzywuzzy import fuzz


###################################################################################################################
# –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥, –µ—Å–ª–∏ —Ç—ã —Å—é–¥–∞ –∑–∞—à–µ–ª, –∑–Ω–∞—á–∏—Ç —Ç–µ–±–µ –ª–∏–±–æ –Ω–µ—Ö—É–π –¥–µ–ª–∞—Ç—å, –ª–∏–±–æ —Ç—ã –º–Ω–µ –Ω–µ –¥–æ–≤–µ—Ä—è–µ—à—å. –ò –Ω–∏—á–µ–≥–æ –≤ —ç—Ç–æ–º –Ω–µ—Ç. #
# –Ø –±—ã —Å–µ–±–µ —Ç–æ–∂–µ –Ω–µ –¥–æ–≤–µ—Ä—è–ª =)                                                                                    #
# –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —è –ª–∏—à—å —Ö–æ—Ç–µ–ª –≤—Å—Ç—Ä–æ–∏—Ç—å –ò–ò –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –Ω–æ –ø–æ—Ç–æ–º –∫–∞–∫-—Ç–æ –∑–∞–∫—Ä—É—Ç–∏–ª–æ—Å—å. –ö—Ä—á —É–¥–∞—á–∏ –∑–¥–µ—Å—å —á—Ç–æ-—Ç–æ –ø–æ–Ω—è—Ç—å.     #
###################################################################################################################


# ChatBot
@user.on_message(filters.command(["chatbot", "ai", "–∏–∏", "—á–∞—Ç–±–æ—Ç"]) & filters.me)
def chat_handler(client, message):
    """
    –¢–∞ —Å–∞–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Ä–∞–¥–∏ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ –≤—Å—ë –∏ –∑–∞—Ç–µ–≤–∞–ª–æ—Å—å
    """
    try:
        user.edit_message_text(message.chat.id, message.id, f"–î—É–º–∞—é...")
    except FloodWait as e:
        sleep(e.x)

    if message.media is None:  # –¢–µ–∫—Å—Ç
        if message.reply_to_message_id is not None:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–≤–µ—Ç
            command = message.text.split(" ")[0]
            mes = user.get_messages(message.chat.id, message.reply_to_message_id)
            if mes.media is None:
                prompt = mes.text + "\n\n" + message.text.replace(command, "")
                img_url = None
            else:
                prompt = message.text.replace(command, "")
                file = user.download_media(mes)  # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ
                img_url = upload_photo(file)  # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –æ–±–ª–∞–∫–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏
        else:
            command = message.text.split(" ")[0]
            prompt = message.text.replace(command, "")
            img_url = None
    else:  # –§–æ—Ç–æ
        command = message.caption.split(" ")[0]
        prompt = message.caption.replace(command, "")
        file = user.download_media(message)  # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ
        img_url = upload_photo(file)  # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –æ–±–ª–∞–∫–æ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏
    try:
        result = f"**{prompt}**\n\n" + chatbot(prompt, img=img_url)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—å
    except Exception as e:
        result = f"**{prompt}**\n\n–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ```{e}```"

    ####################
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ #
    ####################

    # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–∞
    if len(result) <= 4096 and message.media is None:
        try:
            user.edit_message_text(message.chat.id, message.id, result)
        except FloodWait as e:
            sleep(e.x)
    elif len(result) <= 1024 and message.media is not None:
        try:
            user.edit_message_text(message.chat.id, message.id, result)
        except FloodWait as e:
            sleep(e.x)
        os.remove(str(file))
    # –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    else:
        if message.media is not None:
            user.send_photo(message.chat.id, file)
            os.remove(str(file))
        user.delete_messages(message.chat.id, message.id)

        # –†–∞–∑–±–∏–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Å–µ–∫—Ç–æ—Ä—ã –ø–æ 4096 —Å–∏–º–≤–æ–ª–æ–≤
        # –ü—Ä–æ–±–æ–≤–∞–ª —é–∑–∞—Ç—å wrap, –Ω–æ –æ–Ω —É–¥–∞–ª—è–ª –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ –∏ –æ—Ç–≤–µ—Ç –±—ã–ª —Å–ø–ª–æ—à–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –∞–±–∑–∞—Ü–µ–≤
        texts = [result[i:i + 4096] for i in range(0, len(result), 4096)]
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∫—É—Å–∫–∞–º–∏
        for text in texts:
            user.send_message(message.chat.id, text)



# MonsterAPI 
@user.on_message(filters.command(["img", "gen", "—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "–∫–∞—Ä—Ç–∏–Ω–∫–∞"]) & filters.me)
def image_generation_handler(client, message):
    """
    –°–∞–º–∞—è –±–µ—Å–ø–æ–ª–µ–∑–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∞ –∏–º–µ–Ω–Ω–æ - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ 

    P.S.
    –ü–µ—Ä–µ–µ—Ö–∞–ª —Å –ö–∞–Ω–¥–∏–Ω—Å–∫–æ–≥–æ –Ω–∞ –ú–æ–Ω—Å—Ç–µ—Ä–ê–ü–ò, —Ç–∞–∫ –∫–∞–∫ –ö–∞–Ω–¥–∏–Ω—Å–∫–∏–π –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—ã–ª–æ –Ω—É —Ç–∞–∫–∏–º
    """
    if message.reply_to_message_id is not None:  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–≤–µ—Ç
        mes = user.get_messages(message.chat.id, message.reply_to_message_id)
        prompt = mes.text
    else:
        command = message.text.split(" ")[0]
        prompt = message.text.replace(command, "")
    try:
        user.edit_message_text(message.chat.id, message.id, f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
    except FloodWait as e:
        sleep(e.x)
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    req = generate_image(prompt)
    if req is not None:  # –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        r = requests.get(req[0])
        with open("downloads/0.png", "wb") as f:
            f.write(r.content)
        user.delete_messages(message.chat.id, message.id)
        user.send_photo(message.chat.id, "downloads/0.png", prompt)
        os.remove("downloads/0.png")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    else:
        try:
            user.edit_message_text(message.chat.id, message.id, f"–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        except FloodWait as e:
            sleep(e.x)



# 11.09.2001 - –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–∫–∞–∂—É, —á—Ç–æ –∫–æ–¥–∏–ª –∫—Ä–∞–π–Ω–µ –æ—Å—É–∂–¥–∞—é—â–µ
@user.on_message(filters.command(["1111"]) & filters.me)
def _11_11_handler(client, message):
    """
    –û–¥–Ω–∏–º —É—Ç—Ä–æ–º –º–Ω–µ –±—ã–ª–æ –Ω–µ—Ö—É–π –¥–µ–ª–∞—Ç—å –∏ –ø—Ä–∏—à–ª–∞ –≥–µ–Ω–∏–∞–ª—å–Ω–∞—è –∏–¥–µ—è, –∫—Å—Ç–∞—Ç–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —è –∏ —Å–¥–µ–ª–∞–ª –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
    """
    # –ù–∞—á–∞–ª—å–Ω—ã–π –∫–∞–¥—Ä
    render = ".üõ´                                          üè¨"
    # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞–¥—Ä–∞
    try:
        user.edit_message_text(message.chat.id, message.id, render)
    except FloodWait as e:
        sleep(e.x)

    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å–∞–º–æ–ª–µ—Ç–∞ –Ω–∞ 3 –∫–ª–µ—Ç–∫–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    plane_x = 2
    while plane_x < 43:
        plane_x += 3
        render = ""
        # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞–∂–¥–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ –≤ –∞–Ω–∏–º–∞—Ü–∏–∏
        for i in range(44):
            if not i: render += "."  # –¢–æ—á–∫–∞ –≤ –Ω–∞—á–∞–ª–µ
            elif i == plane_x: render += "üõ´"  # –°–∞–º —Å–∞–º–æ–ª–µ—Ç
            elif i == 43: render += "üè¨"  # –ë–∞—à–Ω—è
            else: render += " "  # –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–±–µ–ª)
        try:
            user.edit_message_text(message.chat.id, message.id, render)
        except FloodWait as e:
            sleep(e.x)
        sleep(0.5)  # 2FPS –±–µ–∑ —É—á–µ—Ç–∞ —Ñ–ª—É–¥–≤–∞–∏—Ç–∞ –∏ –ø–∏–Ω–≥–∞ —Å —Å–∞–º–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –∞–ø–∏

    # –í–∑—Ä—ã–≤ –≤ –∫–æ–Ω—Ü–µ
    try:
        user.edit_message_text(message.chat.id, message.id, "üî•")
    except FloodWait as e:
        sleep(e.x)



# –¢–∞ —Å–∞–º–∞—è —Ö—Ä–µ–Ω—å, —á—Ç–æ —Ç–µ–±–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –µ—Å–ª–∏ —Ç—ã —ç—Ç–æ —á–∏—Ç–∞–µ—à—å
@user.on_message(filters.command(["love", "–ª—é–±–ª—é"]) & filters.me)
def love_handler(client, message):
    """
    –î–µ–ª–∞–µ—Ç –º–∏–ª—É—é –∞–Ω–∏–º–∞—Ü–∏—é —Å —Å–µ—Ä–¥–µ—á–∫–æ–º

    P.S.
    –ê–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏—à–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–æ–π –∏–∑-–∑–∞ FloodWait. –ü–ª—é—Å–æ–º –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—á–µ–Ω—å –ª–µ–≥–∫–æ —Å–ª–æ–≤–∏—Ç—å —Ç–æ –∂–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    """
    heart_1 = (
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏èüü•üü•üü•‚óªÔ∏èüü•üü•üü•‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏èüü•üü•üü•üü•üü•üü•üü•üü•üü•‚óªÔ∏è\n"
             "‚óªÔ∏èüü•üü•üü•üü•üü•üü•üü•üü•üü•‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏èüü•üü•üü•üü•üü•üü•üü•‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•üü•üü•üü•üü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•üü•üü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è")
    heart_2 = (
             "‚óªÔ∏èüü•üü•üü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•üü•üü•‚óªÔ∏è\n"
             "üü•üü•üü•üü•üü•‚óªÔ∏èüü•üü•üü•üü•üü•\n"
             "üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•\n"
             "üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•\n"
             "‚óªÔ∏èüü•üü•üü•üü•üü•üü•üü•üü•üü•‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏èüü•üü•üü•üü•üü•üü•üü•‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•üü•üü•üü•üü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•üü•üü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è\n"
             "‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏èüü•‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è‚óªÔ∏è")
    for i in range(10):
        # –ï–ë–ê–ù–ù–´–ô –ê–ü–ò –¢–ï–õ–ï–ì–†–ê–ú–ê. –û–Ω –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–ª–∏–ø—ã –º–µ–Ω—å—à–µ, –∏–Ω–∞—á–µ –§–ª—É–¥–í–∞–∏—Ç. –ü—É–ª—å—Å —É —ç—Ç–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ 52 —É–¥–∞—Ä–∞
        try:
            user.edit_message_text(message.chat.id, message.id, heart_1)
        except FloodWait as e:
            sleep(e.x)
        sleep(1.3)
        try:
            user.edit_message_text(message.chat.id, message.id, heart_2)
        except FloodWait as e:
            sleep(e.x)
        sleep(1)



# –ö–∏–¥–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
@user.on_message(filters.command(["info", "–∏–Ω—Ñ–∞"]) & filters.me)
def info_handler(client, message):
    """
    –ü—Ä–æ—Å—Ç–æ —Å–∫–∏–¥—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–∞—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª
    """
    # –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    # P.S. –ß—Ç–æ-—Ç–æ —è —Ç—É—Ç –Ω–∞—Ö—É–µ–≤–µ—Ä—Ç–∏–ª, —á—Ç–æ —Å–∞–º –Ω–∏—Ö—É—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–æ –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
    mes = user.get_messages(message.chat.id, message.reply_to_message_id) if message.reply_to_message_id is not None else None
    text = (mes.text if message.text is not None else mes.caption) if mes is not None else None

    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–æ–Ω
    if text is not None:
        # –ü–æ–ª—É—á–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        words_count = len([i for i in text.split(" ") if i])  # –°—á–∏—Ç–∞–µ—Ç —Å–ª–æ–≤–∞
        par_count = len([i for i in text.split("\n") if i.replace(" ", "")])  # –°—á–∏—Ç–∞–µ—Ç –∞–±–∑–∞—Ü—ã
        sym_count = len(text)  # –°—á–∏—Ç–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤
        try:
            user.edit_message_text(message.chat.id, message.id, f"<b>ID —á–∞—Ç–∞</b>: <code>{mes.chat.id}</code>\n"
                                                                f"<b>ID —é–∑–µ—Ä–∞</b>: <code>{mes.from_user.id}</code>\n"
                                                                f"<b>ID —Å–æ–æ–±—â–µ–Ω–∏—è</b>: <code>{mes.id}</code>\n\n"
                                                                f"<b>–ö–æ–ª-–≤–æ —Å–ª–æ–≤</b>: <b>{words_count}</b>\n"
                                                                f"<b>–ö–æ–ª-–≤–æ –∞–±–∑–∞—Ü–µ–≤</b>: <b>{par_count}</b>\n"
                                                                f"<b>–ö–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤</b>: <b>{sym_count}</b>",
                                   parse_mode=pyrogram.enums.ParseMode.HTML)
        except FloodWait as e:
            sleep(e.x)
    else:
        try:
            if mes is not None:
                user.edit_message_text(message.chat.id, message.id, f"<b>ID —á–∞—Ç–∞</b>: <code>{mes.chat.id}</code>\n"
                                                                    f"<b>ID —é–∑–µ—Ä–∞</b>: <code>{mes.from_user.id}</code>\n"
                                                                    f"<b>ID —Å–æ–æ–±—â–µ–Ω–∏—è</b>: <code>{mes.id}</code>",
                                       parse_mode=pyrogram.enums.ParseMode.HTML)
            else:
                user.edit_message_text(message.chat.id, message.id, f"<b>ID —á–∞—Ç–∞</b>: <code>{message.chat.id}</code>\n"
                                                                    f"<b>ID —é–∑–µ—Ä–∞</b>: <code>{message.from_user.id}</code>",
                                       parse_mode=pyrogram.enums.ParseMode.HTML)
        except FloodWait as e:
            sleep(e.x)



# –°–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–ª–æ–≤ (–ù–ï –Æ–ó–ê–¢–¨ –í –ö–†–£–ü–ù–´–• –ß–ê–¢–ê–•)
# P.S. –û—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—á–µ–Ω—å –¥–æ–ª–≥–æ, –≤ —á–∞—Ç–∞—Ö –ø–æ 20–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –º–∏–Ω—É—Ç 5 —Ç—Ä–∞—Ç–∏—Ç –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –∏–∑–≤–ª–µ—á—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏
# U.D. "–ë–õ–Ø–¢–¨, —è –∑–∞–ø–ª–∞–∫–∞–ª" (—Å) –¢–∏–Ω—å–∫–æ–≤
@user.on_message(filters.command(["statistic", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "—Å—Ç–∞—Ç–∞"]) & filters.me)
def statistic_handler(client, message):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç, –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–ª–æ–≤–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.

    P.S.
    –ü–∞—Ä–Ω–∏, –∏–∑—É—á–∞–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –≤ —ç—Ç—É —Ö—Ä–µ–Ω—å –ø–∏—Å–∞–ª —á–∞—Å–∞ 2 –∏ —ç—Ç–æ—Ç –ø–∏–∑–¥–µ—Ü —á–∞—Ç–≥–ø—Ç —Ç–æ–ª—å–∫–æ —Å 4 —Ä–∞–∑–∞ –æ—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–ª
    """
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    edit_message(message, "**–ò–∑–≤–ª–µ–∫–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...**")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    messages = list(user.get_chat_history(message.chat.id))

    # –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    edit_message(message, "**–°—á–∏—Ç–∞—é —Å–ª–æ–≤–∞...**")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –∏ —Å–ª–æ–≤–∞—Ä–µ–π
    is_media = 0
    is_text = 0
    word_count = defaultdict(lambda: defaultdict(int))  # {user_id: {word: count}}
    uncensured_word_count = defaultdict(int)
    all_word_count = defaultdict(int)
    senders = defaultdict(int)  # {user_id: message_count}

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Å–ª–æ–≤–∞, –Ω–µ –≤–∫–ª—é—á–∞–µ–º—ã–µ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    ignored_words = {"–∫—Ç–æ", "–∫–µ–º", "—á—Ç–æ–ª–∏", "—á–µ–º", "—Ç–µ–º", "–∫–∞–∫", "—ç—Ç–∞", "—ç—Ç–æ—Ç", "—á—Ç–æ-—Ç–æ", "—á—Ç–æ", "–∫–∞–∫-—Ç–æ", "–∫–∞–∫-–Ω–∏–±—É–¥—å",
                     "–Ω–∏–±—É–¥—å", "–æ–Ω–∞", "–æ–Ω–æ", "–æ–Ω–∏", "—ç—Ç–æ", "–¥–ª—è", "–∏–ª–∏", "–µ–≥–æ", "–∫–æ—Ç–æ—Ä—ã–π", "–µ—Å–ª–∏", "–±–µ–∑", "—Ç–∞–∫",
                     "—Ç–∞–∫–∂–µ", "–¥–∞–∂–µ", "—á—Ç–æ–±—ã", "—Ç–æ–ª—å–∫–æ", "–ø—Ä–∏", "–ø—Ä–æ", "–µ—â–µ", "–µ—â—ë", "—Ç–∞–º", "—É–∂–µ", "–≤—Å—ë", "–≤—Å–µ", "—è",
                     "–º–µ–Ω—è", "–º–Ω–æ–π", "–º–Ω–µ", "–≤–æ—Ç", "–∫–æ–≥–¥–∞", "—Ç–æ–≥–¥–∞", "—Ç–æ—Ç", "—Ç—É—Ç", "—Ç–æ–∂–µ", "—Ä–∞–∑", "–≥–¥–µ", "—Ç–æ–±–æ–π",
                     "—Ç–µ–±–µ", "—Ç–µ–±—è", "—Å–µ–±—è", "—Å–æ–±–æ–π", "–Ω–µ–≥–æ", "–Ω–µ—ë", "–ø–æ—Å–ª–µ", "–Ω–µ—Ç"}

    # –í–µ–ª–∏–∫–∏–π –∏ –º–æ–≥—É—á–∏–π —Ä—É—Å—Å–∫–∏–π, —ë–±–∞–Ω–Ω—ã–π –µ–≥–æ —Ä–æ—Ç
    # P.S. –º–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å, –≤–æ –≤—Ä–µ–º—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞ be like
    uncensured_words = {"—Ö—É–π", "—Ö—É–∏", "–ø–∏–∑–¥–µ—Ü", "–ø–∏–∑–¥–∞", "–µ–±–∞—Ç—å", "–µ–±–∞–ª", "–∞—Ö—É–µ—Ç—å", "–æ—Ö—É–µ—Ç—å", "–æ–ø–∏–∑–¥–æ—Ö—É–µ—Ç—å", "–±–ª—è—Ç—å",
                        "–±–ª—è", "–±–ª—è–¥—å", "–±–ª—è–∑–¥–µ—Ü", "–≥–∞–Ω–¥–æ–Ω", "–≥–æ–Ω–¥–æ–Ω", "–Ω–∞—Ö—É–π", "–Ω–∞—Ö—É—è", "—Ä–∞–∑—ä–µ–±–∞—Ç—å", "—Ä–∞–∑—ä–µ–±–∞–Ω–Ω—ã–π",
                        "—ë–±–∞–Ω–Ω—ã–π", "–µ–±–∞–Ω–Ω—ã–π", "–Ω–∞–µ–±–∞—Ç—å", "—É–µ–±–æ–∫", "—É—ë–±–æ–∫", "—É–µ–±–∞—Ç—å", "—Ö—É–µ—Å–æ—Å", "–ø–æ—Ö—É–π", "–Ω–∏—Ö—É—è", "–æ—Ö—É–µ–Ω–Ω–æ",
                        "–æ—Ö—É–µ–Ω–Ω—ã–π", "–æ—Ö—É–µ–Ω–Ω–∞—è", "–æ—Ö—É–µ–Ω–Ω–æ–µ", "—Ö—É–µ—Å–æ—Å–∏–∫", "—Ö—É–µ—Å–æ—Å–∏–Ω–∞", "—Ö—É–µ—Å–æ—Å–∏—â–µ", "–¥–æ–ª–±–∞—ë–±", "–¥–æ–ª–±–∞–µ–±",
                        "–¥–∞–ª–±–∞–µ–±", "–¥–∞–ª–±–∞—ë–±", "–µ–±–∞–ª–æ", "–µ–±–∞–ª–∞", "–∑–∞–ª—É–ø–∞", "–±–ª—è–¥–∏–Ω–∞", "–∑–∞–ª—É–ø—ã", "–±–ª—è–¥–∏–Ω—ã", "–µ–±–ª–∞–Ω",
                        "–µ–±–ª–∞–Ω–∞", "–ø–∏–∑–¥–æ–ø—Ä–æ—Ç–∏–≤–Ω—ã–π", "–ø–∏–∑–¥–æ–ø—Ä–æ—Ç–∏–≤–Ω–æ", "–ø–∏–∑–¥–æ–ø—Ä–æ—Ç–∏–≤–Ω–æ–µ", "–ø–∏–∑–¥–æ–ø—Ä–æ—Ç–∏–≤–Ω–∞—è", "—Å—Ö—É—è",
                        "—Å—Ö—É—è–ª–∏", "–∏–¥–∏–Ω–∞—Ö—É–π", "–¥–∏–Ω–∞—Ö—É–π", "–¥–∏–Ω–∞—Ö—É", "–∑—É–π", "–µ–±–∏", "–µ–±–∏—Ç–µ", "–µ–±–∏—Ç–µ—Å—å", "–µ–±–∞–ª–∏", "–µ–±–∞–ª–∞",
                        "–∑–∞–µ–±–∞–ª–∏", "–∑–∞–µ–±–ª–∏", "–∑–∞–µ–±–∞–ª–∞", "–∑–∞–µ–±–ª–∞", "–∑–∞–µ–±", "–∑–∞–µ–±–∞–ª", "—É–µ–±—Å–∫–∞—è", "—É—ë–±—Å–∫–∞—è", "—É–µ–±—Å–∫–∏–π",
                        "—É—ë–±—Å–∫–∏–π", "–∑–ª–æ–µ–±—É—á–∏–π", "–∑–ª–æ–µ–±—É—á–∞—è", "–∑–ª–æ–µ–±—É—á–µ–µ", "–∑–ª–æ–µ–±—É—á–∏–µ", "–Ω–∞—Ö—É—è—á–∏–ª", "–Ω–∞—Ö—É—è—á–∏—Ç—å",
                        "–Ω–∞—Ö—É—è—á–∏–ª–∞", "–Ω–∞—Ö—É—è—á–∏–ª–æ", "–µ–±–ª–µ—Ç", "—Ö—É–µ–ø—É—Ç–∞–ª–∞", "–µ–±–ª–µ—Ç–æ–º", "–µ–±–ª–µ—Ç–∞", "—Ö—É–µ–ø—É—Ç–∞–ª–æ", "—Ö—É–µ–ø—É—Ç–∞–ª–æ–º",
                        "–∑–∞—Ö—É—è—á–∏–ª", "–∑–∞—Ö—É—è—á–∏—Ç—å", "–∑–∞—Ö—É—è—á–∏–ª–∞", "–∑–∞—Ö—É—è—á–∏–ª–æ", "–ø–∏–¥–æ—Ä", "–ø–∏–¥–æ—Ä–∞", "–ø–∏–¥–æ—Ä–∞—Å", "–ø–∏–¥–æ—Ä–∞—Å–∞",
                        "—Å–ø–∏–∑–¥–∏—Ç—å", "—Å–ø–∏–∑–¥–∏–ª", "—Å–ø–∏–∑–¥–∏–ª–∞", "—Å–ø–∏–∑–¥–∏–ª–æ", "—É–ø–∏–∑–¥–∏–ª", "—É–ø–∏–∑–¥–∏–ª–∞", "—É–ø–∏–¥–∏—Ç—å", "—É–ø–∏–∑–¥–∏–ª–æ"}

    # –î–æ–ø—É—Å–∫–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å–ª–æ–≤–µ
    valid_chars = set("qwertyuiopasdfghjklzxcvbnm–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é—ë-")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    for msg in messages:
        # –ò–∑–≤–ª–µ–∫–∞—é —Ç–µ–∫—Å—Ç
        text = msg.caption if msg.media else msg.text

        # –û–ø—Ä–µ–¥–µ–ª—è—é —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–±–∞–≤–ª—è—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—á—ë—Ç—á–∏–∫
        if msg.media:
            is_media += 1
        else:
            is_text += 1

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
        if text:
            text = text.lower()  # –ü—Ä–∏–≤–æ–∂—É –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
            words = ["".join([char for char in word if char in valid_chars]) for word in text.split()]
            words = [word for word in words if word and word not in ignored_words and len(word) > 2]

            for word in words:
                word_count[msg.from_user.id][word] += 1
                if word.replace("-", ""):
                    match, score = process.extractOne(word, uncensured_words, scorer=fuzz.ratio)
                    if score >= 85:
                        uncensured_word_count[msg.from_user.id] += 1
                    all_word_count[msg.from_user.id] += 1

        senders[msg.from_user.id] += 1

    # –û–±–Ω–æ–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ
    edit_message(message, "**–°–æ—Å—Ç–∞–≤–ª—è—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...**")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    rating = {}
    _word_count = deepcopy(word_count)

    for user_id, words in word_count.items():
        sorted_words = sorted(words, key=words.get, reverse=True)[:30]
        rating[user_id] = sorted_words

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    user.delete_messages(message.chat.id, message.id)
    for user_id, words in rating.items():
        user_name = user.get_users(user_id).first_name
        words_stat = "\n".join(f"**{i+1})** {word} (**{_word_count[user_id][word]}**)" for i, word in enumerate(words))
        user.send_message(message.chat.id, f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {user_name}**\n\n{words_stat}\n\n"
                                           f"**–ö–æ–ª-–≤–æ –º–∞—Ç–æ–≤: ** {uncensured_word_count[user_id]} "
                                           f"(**{round(uncensured_word_count[user_id] / all_word_count[user_id] * 100, 2)}%**)\n"
                                           f"**–û–±—â–µ–µ –∫–æ–ª-–≤–æ —Å–ª–æ–≤:** {all_word_count[user_id]}")

    # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    senders_stat = "\n".join(
        f"**{user.get_users(user_id).first_name}**: {count} —Å–æ–æ–±—â–µ–Ω–∏{'–µ' if count % 10 == 1 else '—è' if count % 10 in [2, 3, 4] else '–π'}"
        for user_id, count in senders.items()
    )

    # –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤
    user.send_message(message.chat.id, f"**–ò—Ç–æ–≥–∏**\n\n"
                                       f"**–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π**: {len(messages)}\n"
                                       f"**–ú–µ–¥–∏–∞**: {is_media}\n"
                                       f"**–¢–µ–∫—Å—Ç**: {is_text}\n\n"
                                       f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —é–∑–µ—Ä–∞–º**\n"
                                       f"{senders_stat}")


# –•—ç–Ω–¥–ª–µ—Ä –±–æ—Ç–∞
@user.on_message(filters.chat(bot.get_me().id) & filters.me)
def bot_handler(client, message):
    command = message.text
    user_id = message.from_user.id
    if command == "/start" or command == "–ü—Ä–æ—Ñ–∏–ª—å üë§":
        user_info = user.get_me()
        info = f"<b><i>{user_info.first_name}</i></b>\n\n<b>ID:</b> <code>{user_info.id}</code>\n<b>Username:</b> {'@' + user_info.username if user_info.username else '–ù–µ—Ç'}\n<b>Premium:</b> {'–î–∞' if user_info.is_premium else '–ù–µ—Ç'}"
        photos = client.get_chat_photos(user_id)
        photos = [*photos]
        if len(photos) > 0:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—è (–∞–≤–∞—Ç–∞—Ä–∫—É)
            photo_file = photos[0].file_id
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
            downloaded_file = client.download_media(photo_file)
            # –û—Ç–ø—Ä–∞–≤–ª—è—é
            bot.send_photo(user_id, photo=open(str(downloaded_file), "rb"), caption=info, reply_markup=markups.main_markup())
            os.remove(str(downloaded_file))
        else:
            bot.send_message(user_id, info, reply_markup=markups.main_markup())

    elif command == "–¢–µ—Å—Ç –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π üü¢":
        mes = bot.send_message(user_id, f"<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π</b>\n\n"
                                        f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏):</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>\n"
                                        f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (—Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π):</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>\n"
                                        f"<b>MonsterAPI:</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>")
        # –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        try:
            chatbot("hi", None)
        except:
            test_1 = False
        else:
            test_1 = True
        # –û–±–Ω–æ–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(chat_id=mes.chat.id, message_id=mes.id,
                              text=f"<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π</b>\n\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏):</b> <i>{'OK' if test_1 else 'ERROR'}</i>\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (—Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π):</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>\n"
                                   f"<b>MonsterAPI:</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>")
        # –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
        try:
            chatbot("hi", "https://memchik.ru//images/memes/61994612b1c7e34675112608.jpg")
        except:
            test_2 = False
        else:
            test_2 = True
        # –û–±–Ω–æ–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.edit_message_text(chat_id=mes.chat.id, message_id=mes.id,
                              text=f"<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π</b>\n\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏):</b> <i>{'OK' if test_1 else 'ERROR'}</i>\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (—Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π):</b> <i>{'OK' if test_2 else 'ERROR'}</i>\n"
                                   f"<b>MonsterAPI:</b> <i>–ó–∞–≥—Ä—É–∑–∫–∞</i>")
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        res = generate_image("blue sky")
        test_3 = True if res else False
        # –û–±–Ω–æ–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        bot.edit_message_text(chat_id=mes.chat.id, message_id=mes.id,
                              text=f"<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ò–ò-—Ñ—É–Ω–∫—Ü–∏–π</b>\n\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏):</b> <i>{'OK' if test_1 else 'ERROR'}</i>\n"
                                   f"<b>–ó–∞–ø—Ä–æ—Å –∫ –ò–ò (—Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π):</b> <i>{'OK' if test_2 else 'ERROR'}</i>\n"
                                   f"<b>MonsterAPI:</b> <i>{'OK' if test_3 else 'ERROR'}</i>")


    elif command == "–°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏ üìë":
        with open("py_log.log") as f:
            bot.send_document(user_id, f, caption="–õ–æ–≥–∏")

    elif command == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è":
        # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        with open("settings.json") as f:
            settings = json.load(f)
        bot.send_message(message.from_user.id, f"<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
                                               f"<b>–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è text2text</b>: <code>{settings['models']['current_model_1']}</code>\n" 
                                               f"<b>–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è img2text</b>: <code>{settings['models']['current_model_2']}</code>", 
                         reply_markup=markups.settings_markup(settings))

# –•—ç–Ω–¥–ª–µ—Ä –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@user.on_message()
def message_handler(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    if message.from_user is None:
        return

    user_id = message.from_user.id
    chat_id = message.chat.id
    is_private = chat_id == user_id
    is_bot = message.from_user.is_bot
    is_self = message.from_user.is_self
    text = (message.text or message.caption or "").lower()
    with open("settings.json") as f:
        settings = json.load(f)
    if not is_self and is_private and not is_bot:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_store[message.id] = {
            "chat_id": chat_id,
            "text": text,
            "sender": message.from_user.first_name if message.from_user.username is None else f"@{message.from_user.username}"
        }

    elif is_self:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.

        # –ò–∑–≤–ª–µ–∫–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –ò–ú–ï–ù–ù–û –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ –æ–Ω–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        unique_chars = ""
        for i in text: unique_chars += i if i not in unique_chars else ""

        if ("—Ö–∞" in unique_chars or "–∞—Ö" in unique_chars) and len(unique_chars) <= 4 and settings['animation']['laughter']:
            # –≠—Ñ—Ñ–µ–∫—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –±—É–∫–≤ –ø—Ä–∏ —Å–º–µ—Ö–µ
            for _ in range(10):
                bigs = {randint(0, len(text) - 1) for _ in range(int(len(text) // 1.2))}
                new_text = "".join(f"**{char.upper()}**" if idx in bigs else char for idx, char in enumerate(text))
                edit_message(message, new_text)
                sleep(1)

        elif unique_chars in settings['animation']['animated_words']:
            # –≠—Ñ—Ñ–µ–∫—Ç –ø–æ–∫–∞—á–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            for _ in range(3):
                for up_pos in range(len(text)):
                    new_text = "".join(f"**{text[i].upper()}**" if i == up_pos else text[i] for i in range(len(text)))
                    edit_message(message, new_text)
                    sleep(0.7)

            # –ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤
            for _ in range(3):
                edit_message(message, f"**{text.upper()}**")
                sleep(0.7)
                edit_message(message, text.lower())
                sleep(0.7)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
            edit_message(message, message.text or message.caption)



# –û—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@user.on_deleted_messages()
def handle_deleted_messages(client, messages):
    """
    –ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ –µ—Å–ª–∏ –æ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å–ª–æ–≤–∞—Ä–µ, —Ç–æ –±–æ—Ç —Å–∫–∏–Ω–µ—Ç –∏—Ö –≤ –ª—Å
    """
    with open("settings.json") as f:
        settings = json.load(f)

    for message in messages:
        if message and message.id in message_store and settings['send_deleted_messages']:
            deleted_message = message_store.pop(message.id)
            bot.send_message(user.get_me().id, f"<b>–£–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n\n"
                                               f"<b>–ß–∞—Ç</b>: <code>{deleted_message['chat_id']}</code>\n"
                                               f"<b>–Æ–∑–µ—Ä</b>: <code>{deleted_message['sender']}</code>\n"
                                               f"<b>–¢–µ–∫—Å—Ç</b>: <pre>{deleted_message['text']}</pre>")


# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
def edit_message(message, new_text):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –∫ –º–µ–¥–∏–∞."""
    try:
        if message.text != new_text:
            if message.media is None:
                user.edit_message_text(message.chat.id, message.id, new_text)
            else:
                user.edit_message_caption(message.chat.id, message.id, new_text)
    except FloodWait as e:
        sleep(e.x)



if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
    user.run(print("[i] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"))
